@model Product

@{
    ViewData["Title"] = "AddProduct";
    var departmentId = ViewContext.HttpContext.Request.Query["departmentID"];
}

<h1>Add Product</h1>

<h4>ProductDTO</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-controller="Product" asp-action="CreateProduct" method="post">
            @Html.AntiForgeryToken() 
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Name" class="control-label"></label>
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Price" class="control-label"></label>
                <input asp-for="Price" class="form-control" />
                <span asp-validation-for="Price" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Quantity" class="control-label"></label>
                <input asp-for="Quantity" class="form-control" />
                <span asp-validation-for="Quantity" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="DepartmentID" class="control-label"></label>
                <input asp-for="DepartmentID" class="form-control" />
                <span asp-validation-for="DepartmentID" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-controller="Product" asp-action="product" asp-route-departmentID="@departmentId">Back to List</a>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
